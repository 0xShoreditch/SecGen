<?xml version="1.0"?>

<scenario xmlns="http://www.github/cliffe/SecGen/scenario"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.github/cliffe/SecGen/scenario">

  <name>Writing Exploits: Linux and Stack-smashing Buffer Overflows</name>
  <author>Thomas Shaw</author>
  <description>
    [Lab sheet here](https://docs.google.com/document/d/1wgxLYHkdeLknRcbzZY73xZt36TWExuu-lfIJhRuHE-I/).
  </description>

  <type>ctf-lab</type>
  <type>lab-sheet</type>
  <difficulty>advanced</difficulty>

<!--  <system>-->
<!--    <system_name>linux_server</system_name>-->
<!--    <base platform="linux" type="desktop" distro="Buster"/>-->

<!--    &lt;!&ndash; This system wants:-->
<!--         - Binary challenge (no stack protections) hosted over the network with setgid-->
<!--         - Binary challenge (no stack protections) hosted locally with setuid-->
<!--         - Web server containing a copy of the setgid binary and .c file, serving up at http://<ip_address>:80-->
<!--    &ndash;&gt;-->
<!--    &lt;!&ndash; TODO: Parameter to serve up a directory as root directory? &ndash;&gt;-->

<!--    <service module_path=".*/apache"/>-->
<!--    <utility module_path=".*/metactf">-->
<!--      <input into="challenge_list">-->
<!--        <generator type="metactf_challenge">-->
<!--          <input into="challenge_path">-->
<!--            <value>src_sse/SSE/Ch_simple_BOF_1</value>-->
<!--          </input>-->
<!--          <input into="copy_directory">-->
<!--            <datastore>web_share</datastore>-->
<!--          </input>-->
<!--          <input into="port">-->
<!--            <value>31337</value>-->
<!--          </input>-->
<!--          <input into="flag">-->
<!--            <generator type="flag_generator"/>-->
<!--            <generator type="flag_generator"/>-->
<!--            <generator type="flag_generator"/>-->
<!--            <generator type="flag_generator"/>-->
<!--          </input>-->
<!--        </generator>-->
<!--      </input>-->
<!--    </utility>-->

<!--    <network type="private_network">-->
<!--      <input into="IP_address">-->
<!--        <datastore access="0">IP_addresses</datastore>-->
<!--      </input>-->
<!--    </network>-->
<!--  </system>-->

  <system>
    <system_name>metactf_desktop</system_name>
    <base platform="linux" type="desktop" distro="Buster"/>

    <input into_datastore="IP_addresses">

      <!-- 0 metactf_desktop -->
      <value>172.16.0.2</value>
      <!-- 1 kali -->
      <value>172.16.0.3</value>

      <!-- 0 linux_server -->
      <!--      <value>172.16.0.4</value>-->
    </input>

    <utility module_path=".*/reversing_tools"/>
    <utility module_path=".*/ghidra"/>

    <utility module_path=".*/parameterised_accounts">
      <input into="accounts" into_datastore="account">
        <generator type="account">
          <input into="username">
            <generator type="random_sanitised_word">
              <input into="wordlist">
                <value>mythical_creatures</value>
              </input>
            </generator>
          </input>
          <input into="password">
            <value>tiaspbiqe2r</value>
          </input>
          <input into="super_user">
            <value>false</value>
          </input>
        </generator>
      </input>
    </utility>

    <utility module_path=".*/kde_minimal">
      <input into="autologin_user">
        <datastore access="0" access_json="['username']">account</datastore>
      </input>
      <input into="accounts">
        <datastore>account</datastore>
      </input>
      <input into="autostart_konsole">
        <value>true</value>
      </input>
    </utility>
    <utility module_path=".*/handy_cli_tools"/>
    <utility module_path=".*/hash_tools"/>
    <utility module_path=".*/metactf">
      <input into="account">
        <datastore>account</datastore>
      </input>
      <input into="challenge_list">
        <generator type="metactf_challenge">
          <input into="challenge_path">
            <value>src_sse/Ch3.7-3.9/Ch3_07_ScanfOverflow</value>
          </input>
        </generator>
        <generator type="metactf_challenge">
          <input into="challenge_path">
            <value>src_sse/Ch3.7-3.9/Ch3_07_StackSmash</value>
          </input>
        </generator>
        <generator type="metactf_challenge">
          <input into="challenge_path">
            <value>src_sse/Ch3-ExtraFormatStr/Ch3_Format5_nTargetWrite</value>
          </input>
        </generator>
        <generator type="metactf_challenge">
          <input into="challenge_path">
            <value>src_sse/SSE/Ch_simple_BOF_1</value>
          </input>
        </generator>
      </input>
    </utility>

    <network type="private_network">
      <input into="IP_address">
        <datastore access="0">IP_addresses</datastore>
      </input>
    </network>
  </system>


	<system>
		<system_name>kali</system_name>
		<base distro="Kali" name="MSF"/>

		<input into_datastore="kali_root_account">
			<value>{"username":"root","password":"toor","super_user":"","strings_to_leak":[],"leaked_filenames":[]}</value>
		</input>

		<utility module_path=".*/metasploit_framework"/>
		<utility module_path=".*/armitage"/>
		<utility module_path=".*/exploitdb"/>
		<utility module_path=".*/handy_cli_tools"/>
		<utility module_path=".*/nmap"/>

		<network type="private_network" >
			<input into="IP_address">
				<datastore access="1">IP_addresses</datastore>
			</input>
		</network>
	</system>

</scenario>
